#*******************************************************************************
#                Copyright 2004, MARVELL SEMICONDUCTOR, LTD.                   *
# THIS CODE CONTAINS CONFIDENTIAL INFORMATION OF MARVELL.                      *
# NO RIGHTS ARE GRANTED HEREIN UNDER ANY PATENT, MASK WORK RIGHT OR COPYRIGHT  *
# OF MARVELL OR ANY THIRD PARTY. MARVELL RESERVES THE RIGHT AT ITS SOLE        *
# DISCRETION TO REQUEST THAT THIS CODE BE IMMEDIATELY RETURNED TO MARVELL.     *
# THIS CODE IS PROVIDED "AS IS". MARVELL MAKES NO WARRANTIES, EXPRESSED,       *
# IMPLIED OR OTHERWISE, REGARDING ITS ACCURACY, COMPLETENESS OR PERFORMANCE.   *
#                                                                              *
# MARVELL COMPRISES MARVELL TECHNOLOGY GROUP LTD. (MTGL) AND ITS SUBSIDIARIES, *
# MARVELL INTERNATIONAL LTD. (MIL), MARVELL TECHNOLOGY, INC. (MTI), MARVELL    *
# SEMICONDUCTOR, INC. (MSI), MARVELL ASIA PTE LTD. (MAPL), MARVELL JAPAN K.K.  *
# (MJKK), MARVELL ISRAEL LTD. (MSIL).                                          *
#*******************************************************************************
# makefile.user
#
# DESCRIPTION:
# makefile.user contains user private definitions 
#*******************************************************************************
# Build VxWorks image with/without SGI Yukon driver support.
INCLUDE_SGI_INTO_IMAGE = N

# Build SGI Yukon driver with/without ASF, ASF_DEBUG support.
INCLUDE_ASF = N
INCLUDE_ASF_DEBUG = N

# Build bootrom.bin image with/without SGI Yukon driver support.
INCLUDE_SGI_INTO_BOOTROM = N

#*******************************************************************************
# To build Debug image uncomment line below
#BUILD = _dbg

WDB_AGENT=N
ifeq ($(BUILD), _dbg)
MV_DEFINE   = -DINCLUDE_BRIDGING -g -DMV_RT_DEBUG -DMV_RELEASE 
DBG_OBJ    = ramDisk.o scsiDisk.o  copyTestFile.o vxFtpTest.o  vxUdpTests.o test_fs.o test_rawfs.o diskp.o
DBG_OBJ    += testmath1.o commonMath.o fpu.o testmath2.o testmath3.o testmath4.o testmath5.o testmath6.o testmath7.o
#DBG_OBJ   += nflashTest.o idmaErrTest.o 

ifeq ($(WDB_AGENT), N)
MV_DEFINE   = -DMV_RELEASE 
endif

else
MV_DEFINE   = -DINCLUDE_BRIDGING -DMV_RELEASE
DBG_OBJ	= 
endif

###############################################################################
# This makefile supports Tornado and PID. Set WR_IDE lable with:
# WR_IDE = Pid   To compile BSP under PID.
# WR_IDE = Wb    To compile BSP under Workbench (vxWorks 6.x)
# To compile with standard Tornado leave the label empty
ifeq ($(WR_IDE), )
WR_IDE      = Pid
endif

###############################################################################
# UDP checksum configuration selection
# UDP_CKSUM   = SW  ; UDP Checksum calculate by the software.
# UDP_CKSUM   = HW  ; UDP Checksum done by Hardware(offload).

UDP_CKSUM = SW

###############################################################################
DRAM_STATIC = YES

# for using static DIMM uncomment next line
ifeq ($(DRAM_STATIC), YES)
MV_DEFINE    += -DMV_STATIC_DRAM_ON_BOARD
	ifeq ($(DIMM), RD645XX)
	MV_DEFINE    += -DRD_MV645XX
	endif
	
	ifeq ($(DIMM),TS256MLQ72V5U)
	MV_DEFINE    += -DMV_DIMM_TS256MLQ72V5U
	endif
	
	ifeq ($(DIMM), M3783354CZ3)
	MV_DEFINE    += -DMV_DIMM_M3783354CZ3_CE6 
	endif

else
MV_DEFINE    += -DMV_INC_BOARD_DDIM
endif

###############################################################################

ifeq ($(JUMBO), YES)
MV_DEFINE      += -DETH_JUMBO_SUPPORT
endif

ifeq ($(CACHE), SW)
MV_DEFINE      += -DDRAM_COHERENCY_SW
endif

###############################################################################
#User configuration selection
# ARMARCH_NUM = 5   ;Use ARM architecture 5 libraries.
ARMARCH_NUM = 5
###############################################################################
# ENDIAN      = BE  ;Use Big Endian tool chain.
# ENDIAN      = LE  ;Use Little Endian tool chain.

ifeq ($(ENDIAN), )
ENDIAN      = LE
endif

###############################################################################
# This make file support the following projects: Disco Duo, Kirkwood
#PROJECT = KW To compile for Kirkwood project (default project)
#PROJECT = DD To compile for Disco Duo project
ifeq ($(PROJECT), )    
PROJECT = DD
endif
###############################################################################
# BUILD_TOOL  =     ;(blank) Use Tornado 2.2.1 libraries
# BUILD_TOOL  = VFP ;Use WindRiver VFP patch (VFP tools)
# BOARD_TYPE  =     ; (blank) Use default DB-88F5x81-DDR1/2-BP
# BOARD_TYPE  = MNG ; Use DB-88F5181-MNG board.
# BOARD_TYPE  = NAS ; Use for DB-88f5182 and RD-88f5182

# The default tool for Disco Duo project is with VFP
ifeq ($(PROJECT), DD )    
BUILD_TOOL  = VFP
endif

###############################################################################
# Select CPU mode.
# Two CPU modes are avilable:
# MV_CPU = 946 which set the Marvell CPU to ARM946ES mode (MPU enabled)
# MV_CPU = 926 which set the Marvell CPU to ARM926EJ mode (MMU enabled)
# Note:
# Workbench does not support ARM946 currently. Thus selecting Wb as WR_IDE 
# will force the MV_CPU to be ARM926EJ.

ifeq ($(MV_CPU), )
MV_CPU = 926
endif


#Path definision
SRC_PATH        = .
GEI_NAME        = gei82543End$(WR_IDE)
DNLD_PATH       = C:\ftproot\DiscoDou

USB_OBJS        = 
USB_DEFINE      =
MV_DEFINE       += -DINCLUDE_L2_CACHE #-DINCLUDE_L2_WT

#INTEL_NET_OBJS  = $(BSP_OBJ_DIR)/$(GEI_NAME)$(MV_CPU).obj
###############################################################################


ifeq ($(WR_IDE), Wb)
MV_DEFINE       += -DWORKBENCH 
USB             = HOST_VXW
TOOL_VER        = gcc3.3
VXWORD_VER      = 65

endif

ifeq ($(WR_IDE), Pid)
MV_DEFINE       += -DTORNADO_PID
USB             = HOST_VXW
TOOL_VER        = gcc2.96
endif

ifeq ($(WR_IDE), )
MV_DEFINE       += -DTORNADO
USB             = DEV_MARVELL
TOOL_VER        = gcc2.96
endif
#  USB_RESTRICTED = YES is for removed USB restricted source code.
USB_RESTRICTED = YES
ifeq ($(USB_RESTRICTED), NO)

USER_SRC_DIRS   = $(SRC_PATH)/plat-feroceon/mv_hal/usb/examples          \
                  $(SRC_PATH)/plat-feroceon/mv_hal/usb_restricted/device \
                  $(SRC_PATH)/plat-feroceon/mv_hal/usb_restricted/host   \
                  $(SRC_PATH)/vxBsp/WindRiverFiles      \
                  $(SRC_PATH)/VxBsp/Debug

USER_INC_PATH   = -I$(SRC_PATH)/plat-feroceon/mv_hal/usb/api               \
                  -I$(SRC_PATH)/plat-feroceon/mv_hal/usb/examples          \
                  -I$(SRC_PATH)/plat-feroceon/mv_hal/usb_restricted/common \
                  -I$(SRC_PATH)/vxBsp/WindRiverFiles
                                                  

USB_DEV_OBJS    = mvUsbDevMain.o mvUsbDevRecv.o mvUsbDevSend.o     \
                  mvUsbDevUtl.o  mvUsbHsDevCncl.o mvUsbHsDevMain.o \
                  mvUsbHsDevUtl.o mvUsbDevCh9.o
                  
USB_DEV_DEMO_OBJS = mouse.o disk.o 

USB_HOST_OBJS   = mvUsbHostCh9.o mvUsbHostClasses.o mvUsbHostCommon.o   \
                  mvUsbHostDevList.o mvUsbHostMain.o mvUsbHsHostBw.o    \
                  mvUsbHsHostIntr.o mvUsbHsHostIso.o mvUsbHsHostMain.o
else
USER_SRC_DIRS   = 
USER_INC_PATH   = 
USB_DEV_OBJS	= 
USB_DEV_DEMO_OBJS = 
USB_HOST_OBJS	=
endif

ifeq ($(IMAGE), BOOTROM)
MV_CESA		= N
else
MV_CESA         = N
endif

ifeq ($(USB), HOST_VXW)
USB_DEFINE     += -DMV_USB_STACK_VXW
endif



MV_DEFINE       += -DMV_INCLUDE_PEX
MV_DEFINE       += -DMV_INCLUDE_TWSI #-DMV_INCLUDE_TDM
MV_DEFINE       += -DMV_INCLUDE_XOR -DMV_INCLUDE_UART
MV_DEFINE       += #-DMV_INCLUDE_SFLASH_MTD -DMV_INCLUDE_SDIO
MV_DEFINE       += -DMV_INCLUDE_GIG_ETH -DCONFIG_MV_INCLUDE_GIG_ETH 
#MV_DEFINE       += -DMV_INC_BOARD_SPI_FLASH

AUDIO = NO
ifeq ($(AUDIO),YES)
MV_DEFINE       += -DMV_INCLUDE_AUDIO
endif

ifeq ($(IMAGE), BOOTROM)
MV_DEFINE      += -DBOOTROM $(USB_DEFINE) -DDRAM_DETECT
BSP_USER_OBJS   = 
else

#vxWorks.st BSP definitions
ifeq ($(USB_RESTRICTED), NO)
USB_OBJS       += vxUsbDevs.o $(BSP_OBJ_DIR)/usbDevLib.obj  $(BSP_OBJ_DIR)/usbDevDemo.obj
else
USB_OBJS       += $(BSP_OBJ_DIR)/usbDevLib.obj  $(BSP_OBJ_DIR)/usbDevDemo.obj
endif

USB_DEFINE    += -DMV_USB_VOLTAGE_FIX #-DMV_USB_TRACE_PRINT
MV_DEFINE     += -DMV_VXWORKS_ST # -DMV_INCLUDE_USB -DMV_INCLUDE_INTEG_SATA -DMV_SATA_SUPPORT -DMV_INCLUDE_SATA
MV_DEFINE     += #-DINCLUDE_USER_APPL #$(USB_DEFINE)
BSP_USER_OBJS =  #mvUsrAppInit.o #vxUtils.o vxTests.o $(USB_OBJS) $(MRVL_SATA_OBJS)

ifeq ($(VXWORD_VER), 65)
BSP_USER_OBJS   +=  ipAddr.o 
endif
endif

################################################################################
# For Marvell internal use.

$(GEI_NAME)$(MV_CPU).obj:        $(GEI_NAME).o
	- @ $(RM) $(BSP_OBJ_DIR)/$@
	$(LD_PARTIAL) $(MV_DEFINE) $(GEI_NAME).o -o $(BSP_OBJ_DIR)/$@     

usbDevLib.obj:  $(USB_DEV_OBJS)
	- @ $(RM) $(BSP_OBJ_DIR)/$@
	$(LD_PARTIAL) $(MV_DEFINE) $(USB_DEV_OBJS) -o $(BSP_OBJ_DIR)/$@
        
usbDevDemo.obj:  $(USB_DEV_DEMO_OBJS)
	- @ $(RM) $(BSP_OBJ_DIR)/$@
	$(LD_PARTIAL) $(MV_DEFINE) $(USB_DEV_DEMO_OBJS) -o $(BSP_OBJ_DIR)/$@
        
usbHostLib.obj: $(USB_HOST_OBJS)
	- @ $(RM) $(BSP_OBJ_DIR)/$@
	$(LD_PARTIAL) $(MV_DEFINE) $(USB_HOST_OBJS) -o $(BSP_OBJ_DIR)/$@


cache$(MV_CPU)eALib.obj:  cache$(MV_CPU)eALib.o
	- @ $(RM) $(BSP_OBJ_DIR)/$@     
	$(LD_PARTIAL) $(MV_DEFINE) cache$(MV_CPU)eALib.o -o $(BSP_OBJ_DIR)/$@     
        
cache$(MV_CPU)eLib.obj:  cache$(MV_CPU)eLib.o
	- @ $(RM) $(BSP_OBJ_DIR)/$@
	$(LD_PARTIAL) $(MV_DEFINE) cache$(MV_CPU)eLib.o -o $(BSP_OBJ_DIR)/$@     
        
mmu$(MV_CPU)eALib.obj:  mmu$(MV_CPU)eALib.o
	- @ $(RM) $(BSP_OBJ_DIR)/$@     
	$(LD_PARTIAL) $(MV_DEFINE) mmu$(MV_CPU)eALib.o -o $(BSP_OBJ_DIR)/$@     
        
mmu$(MV_CPU)eLib.obj:  mmu$(MV_CPU)eLib.o
	- @ $(RM) $(BSP_OBJ_DIR)/$@
	$(LD_PARTIAL) $(MV_DEFINE) mmu$(MV_CPU)eLib.o -o $(BSP_OBJ_DIR)/$@     
        

cacheAimFeroceonLib.obj:  cacheAimFeroceonLib.o
	- @ $(RM) $(BSP_OBJ_DIR)/$@
	$(LD_PARTIAL) $(MV_DEFINE) cacheAimFeroceonLib.o -o $(BSP_OBJ_DIR)/$@     
        
cacheAimFeroceonALib.obj:  cacheAimFeroceonALib.o
	- @ $(RM) $(BSP_OBJ_DIR)/$@
	$(LD_PARTIAL) $(MV_DEFINE) cacheAimFeroceonALib.o -o $(BSP_OBJ_DIR)/$@     

vmMpuLib.obj:  vmMpuLib.o
	- @ $(RM) $(BSP_OBJ_DIR)/$@     
	$(LD_PARTIAL) $(MV_DEFINE) vmMpuLib.o -o $(BSP_OBJ_DIR)/$@     
        
vmData.obj:  vmData.o
	- @ $(RM) $(BSP_OBJ_DIR)/$@     
	$(LD_PARTIAL)  $(MV_DEFINE)  vmData.o -o $(BSP_OBJ_DIR)/$@     
        


        
#################################################################
# Must run twice. Once for MV_CPU = 946 and once for MV_CPU = 926

arch4beObjs: usbDevLib.obj usbDevDemo.obj $(GEI_NAME).obj       \
             mmu$(MV_CPU)eALib.obj mmu$(MV_CPU)eLib.obj        \
             cache$(MV_CPU)eALib.obj cache$(MV_CPU)eLib.obj

#################################################################
# Must set MV_CPU = 946

arch5leObjs: usbDevLib.obj usbDevDemo.obj $(GEI_NAME).obj       \
             cache$(MV_CPU)eALib.obj cache$(MV_CPU)eLib.obj

